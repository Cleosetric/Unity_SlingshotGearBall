using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using TMPro;

public class PlayerManager : MonoBehaviour
{
    #region Singleton
	private static PlayerManager _instance;
	public static PlayerManager Instance { get { return _instance; } }

	private void Awake()
    {
        if (_instance != null && _instance != this)
        {
            Destroy(this.gameObject);
        } else {
            _instance = this;
        }
    }
	#endregion

    public HeroBase heroData;
    private PlayerBall player;
    private PlayerControl control;
    private PlayerUI playerUI;

    private float hp;
    private float stamina;
    private float timer;
    private float energyToSling;
    [SerializeField] private float regenStamina = 10f;
    [SerializeField] private float regenCooldown = 2f;

    public HeroBase GetHeroData(){
        return heroData;
    }

    // Start is called before the first frame update
    void Start()
    {
        player = FindObjectOfType<PlayerBall>();
        control = FindObjectOfType<PlayerControl>();
        textHP = heroHp.gameObject.GetComponentInChildren<TextMeshProUGUI>();
        textStamina = heroStamina.gameObject.GetComponentInChildren<TextMeshProUGUI>();

        if (heroData != null) LoadHero(heroData);
    }

    private void LoadHero(HeroBase data)
    {
        hp = data.maxHp;
        stamina = data.maxStamina;

        heroName.text = data.name;
        heroFace.sprite = data.heroFace;

        heroHp.maxValue = hp;
        heroHp.value = hp;
        heroStamina.maxValue = stamina;
        heroStamina.value = stamina;

        textHP.text = hp.ToString();
        textStamina.text = stamina.ToString();

        control.powerShoot = data.speed;
        control.maxDistance = data.controlRange;

        player.GetComponentInChildren<SpriteRenderer>().sprite = data.heroSprite;
    }

    private void RefreshData(){
        heroHp.value = hp;
        heroStamina.value = stamina;
        textHP.text = hp.ToString();
        textStamina.text = stamina.ToString();
    }

    public void OnSlingshot(){
        stamina -= energyToSling;
        if(stamina < 0){
            stamina = 0;
        }
        timer = regenCooldown;
        RefreshData();
    }

    public void OnDamage(int damage){
        hp -= damage;
        if(hp < 0){
            hp = 0;
        }
        RefreshData();
    }

    public bool IsSlingable(){
        if(stamina > energyToSling){
            return true;
        }
        return false;
    }

    // Update is called once per frame
    void Update()
    {
        if(heroData != null){
            if(stamina < heroData.maxStamina){
                timer -= Time.deltaTime;
                if(timer <= 0f){
                    RegenStamina(regenStamina);
                }
            }
        }
    }

    void RegenStamina(float energy){
        stamina = stamina + Mathf.Round(energy * Time.deltaTime);
        if(stamina > heroData.maxStamina){
            stamina = heroData.maxStamina;
        }
        RefreshData();
    }
}
